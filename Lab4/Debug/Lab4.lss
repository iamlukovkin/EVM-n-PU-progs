
Lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000684  00000718  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000684  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000010a  00800102  00800102  0000071a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000071a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000778  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  000007b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000086f  00000000  00000000  00000800  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006e5  00000000  00000000  0000106f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000034e  00000000  00000000  00001754  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d4  00000000  00000000  00001aa4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ce  00000000  00000000  00001b78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000013c  00000000  00000000  00001f46  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00002082  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 67 00 	jmp	0xce	; 0xce <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e8       	ldi	r30, 0x84	; 132
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a2 e0       	ldi	r26, 0x02	; 2
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 30       	cpi	r26, 0x0C	; 12
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <main>
  9e:	0c 94 40 03 	jmp	0x680	; 0x680 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART_Init>:
void LED_On() {
    PORTB |= (1 << PB5); // Turn on the LED (PortB5)
}

void LED_Off() {
    PORTB &= ~(1 << PB5); // Turn off the LED (PortB5)
  a6:	87 e6       	ldi	r24, 0x67	; 103
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  ae:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  b2:	88 e9       	ldi	r24, 0x98	; 152
  b4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  b8:	86 e0       	ldi	r24, 0x06	; 6
  ba:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  be:	08 95       	ret

000000c0 <USART_Transmit>:
  c0:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  c4:	95 ff       	sbrs	r25, 5
  c6:	fc cf       	rjmp	.-8      	; 0xc0 <USART_Transmit>
  c8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  cc:	08 95       	ret

000000ce <__vector_18>:
}

ISR(USART_RX_vect) {
  ce:	1f 92       	push	r1
  d0:	0f 92       	push	r0
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	0f 92       	push	r0
  d6:	11 24       	eor	r1, r1
  d8:	0f 93       	push	r16
  da:	1f 93       	push	r17
  dc:	2f 93       	push	r18
  de:	3f 93       	push	r19
  e0:	4f 93       	push	r20
  e2:	5f 93       	push	r21
  e4:	6f 93       	push	r22
  e6:	7f 93       	push	r23
  e8:	8f 93       	push	r24
  ea:	9f 93       	push	r25
  ec:	af 93       	push	r26
  ee:	bf 93       	push	r27
  f0:	ef 93       	push	r30
  f2:	ff 93       	push	r31
  f4:	cf 93       	push	r28
  f6:	df 93       	push	r29
  f8:	1f 92       	push	r1
  fa:	cd b7       	in	r28, 0x3d	; 61
  fc:	de b7       	in	r29, 0x3e	; 62
    char receivedByte = UDR0; // Get the received byte
  fe:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 102:	89 83       	std	Y+1, r24	; 0x01

    if (data_index == 0) {
 104:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data_index>
 108:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <data_index+0x1>
 10c:	23 2b       	or	r18, r19
 10e:	21 f4       	brne	.+8      	; 0x118 <__vector_18+0x4a>
		if (receivedByte != 'F') {
 110:	86 34       	cpi	r24, 0x46	; 70
 112:	09 f0       	breq	.+2      	; 0x116 <__vector_18+0x48>
 114:	ca c0       	rjmp	.+404    	; 0x2aa <__vector_18+0x1dc>
 116:	c0 c0       	rjmp	.+384    	; 0x298 <__vector_18+0x1ca>
			return;
		}
    } else if (data_index == 1) {
 118:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data_index>
 11c:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <data_index+0x1>
 120:	21 30       	cpi	r18, 0x01	; 1
 122:	31 05       	cpc	r19, r1
 124:	21 f4       	brne	.+8      	; 0x12e <__vector_18+0x60>
		if (receivedByte != 'F') {
 126:	86 34       	cpi	r24, 0x46	; 70
 128:	09 f0       	breq	.+2      	; 0x12c <__vector_18+0x5e>
 12a:	bf c0       	rjmp	.+382    	; 0x2aa <__vector_18+0x1dc>
 12c:	b5 c0       	rjmp	.+362    	; 0x298 <__vector_18+0x1ca>
			return;
		}
    } else if (data_index == 2) {
 12e:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data_index>
 132:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <data_index+0x1>
 136:	22 30       	cpi	r18, 0x02	; 2
 138:	31 05       	cpc	r19, r1
 13a:	29 f4       	brne	.+10     	; 0x146 <__vector_18+0x78>
		 if (receivedByte != my_adr[0]) {
 13c:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 140:	89 13       	cpse	r24, r25
 142:	b3 c0       	rjmp	.+358    	; 0x2aa <__vector_18+0x1dc>
 144:	a9 c0       	rjmp	.+338    	; 0x298 <__vector_18+0x1ca>
			return;
		 } 
    } else if (data_index == 3) {
 146:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data_index>
 14a:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <data_index+0x1>
 14e:	23 30       	cpi	r18, 0x03	; 3
 150:	31 05       	cpc	r19, r1
 152:	29 f4       	brne	.+10     	; 0x15e <__vector_18+0x90>
		if (receivedByte != my_adr[1]) {
 154:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 158:	89 13       	cpse	r24, r25
 15a:	a7 c0       	rjmp	.+334    	; 0x2aa <__vector_18+0x1dc>
 15c:	9d c0       	rjmp	.+314    	; 0x298 <__vector_18+0x1ca>
			return;
		}
	} else if (data_index == 6) {
 15e:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data_index>
 162:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <data_index+0x1>
 166:	26 30       	cpi	r18, 0x06	; 6
 168:	31 05       	cpc	r19, r1
 16a:	19 f5       	brne	.+70     	; 0x1b2 <__vector_18+0xe4>

		data_length = strtol(&receivedByte, NULL, 16) << 4; // Преобразование первого полубайта и сдвиг на 4 бита влево
 16c:	40 e1       	ldi	r20, 0x10	; 16
 16e:	50 e0       	ldi	r21, 0x00	; 0
 170:	60 e0       	ldi	r22, 0x00	; 0
 172:	70 e0       	ldi	r23, 0x00	; 0
 174:	ce 01       	movw	r24, r28
 176:	01 96       	adiw	r24, 0x01	; 1
 178:	0e 94 9b 01 	call	0x336	; 0x336 <strtol>
 17c:	dc 01       	movw	r26, r24
 17e:	cb 01       	movw	r24, r22
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	aa 1f       	adc	r26, r26
 186:	bb 1f       	adc	r27, r27
 188:	88 0f       	add	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	aa 1f       	adc	r26, r26
 18e:	bb 1f       	adc	r27, r27
 190:	88 0f       	add	r24, r24
 192:	99 1f       	adc	r25, r25
 194:	aa 1f       	adc	r26, r26
 196:	bb 1f       	adc	r27, r27
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	aa 1f       	adc	r26, r26
 19e:	bb 1f       	adc	r27, r27
 1a0:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <data_length>
 1a4:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <data_length+0x1>
 1a8:	a0 93 09 01 	sts	0x0109, r26	; 0x800109 <data_length+0x2>
 1ac:	b0 93 0a 01 	sts	0x010A, r27	; 0x80010a <data_length+0x3>
 1b0:	73 c0       	rjmp	.+230    	; 0x298 <__vector_18+0x1ca>
	} else if (data_index == 7) {
 1b2:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data_index>
 1b6:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <data_index+0x1>
 1ba:	27 30       	cpi	r18, 0x07	; 7
 1bc:	31 05       	cpc	r19, r1
 1be:	19 f5       	brne	.+70     	; 0x206 <__vector_18+0x138>
		data_length |= strtol(&receivedByte, NULL, 16) ;  
 1c0:	40 e1       	ldi	r20, 0x10	; 16
 1c2:	50 e0       	ldi	r21, 0x00	; 0
 1c4:	60 e0       	ldi	r22, 0x00	; 0
 1c6:	70 e0       	ldi	r23, 0x00	; 0
 1c8:	ce 01       	movw	r24, r28
 1ca:	01 96       	adiw	r24, 0x01	; 1
 1cc:	0e 94 9b 01 	call	0x336	; 0x336 <strtol>
 1d0:	00 91 07 01 	lds	r16, 0x0107	; 0x800107 <data_length>
 1d4:	10 91 08 01 	lds	r17, 0x0108	; 0x800108 <data_length+0x1>
 1d8:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <data_length+0x2>
 1dc:	30 91 0a 01 	lds	r19, 0x010A	; 0x80010a <data_length+0x3>
 1e0:	dc 01       	movw	r26, r24
 1e2:	cb 01       	movw	r24, r22
 1e4:	80 2b       	or	r24, r16
 1e6:	91 2b       	or	r25, r17
 1e8:	a2 2b       	or	r26, r18
 1ea:	b3 2b       	or	r27, r19
		data_length *= 2;
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	aa 1f       	adc	r26, r26
 1f2:	bb 1f       	adc	r27, r27
 1f4:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <data_length>
 1f8:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <data_length+0x1>
 1fc:	a0 93 09 01 	sts	0x0109, r26	; 0x800109 <data_length+0x2>
 200:	b0 93 0a 01 	sts	0x010A, r27	; 0x80010a <data_length+0x3>
 204:	49 c0       	rjmp	.+146    	; 0x298 <__vector_18+0x1ca>
    } else if (data_index >= 8 && data_counter < data_length) {
 206:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data_index>
 20a:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <data_index+0x1>
 20e:	28 30       	cpi	r18, 0x08	; 8
 210:	31 05       	cpc	r19, r1
 212:	64 f1       	brlt	.+88     	; 0x26c <__vector_18+0x19e>
 214:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <__data_end>
 218:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <__data_end+0x1>
 21c:	05 2e       	mov	r0, r21
 21e:	00 0c       	add	r0, r0
 220:	66 0b       	sbc	r22, r22
 222:	77 0b       	sbc	r23, r23
 224:	00 91 07 01 	lds	r16, 0x0107	; 0x800107 <data_length>
 228:	10 91 08 01 	lds	r17, 0x0108	; 0x800108 <data_length+0x1>
 22c:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <data_length+0x2>
 230:	30 91 0a 01 	lds	r19, 0x010A	; 0x80010a <data_length+0x3>
 234:	40 17       	cp	r20, r16
 236:	51 07       	cpc	r21, r17
 238:	62 07       	cpc	r22, r18
 23a:	73 07       	cpc	r23, r19
 23c:	bc f4       	brge	.+46     	; 0x26c <__vector_18+0x19e>
        received_data[data_counter] = receivedByte;
 23e:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <__data_end>
 242:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <__data_end+0x1>
 246:	e5 5f       	subi	r30, 0xF5	; 245
 248:	fe 4f       	sbci	r31, 0xFE	; 254
 24a:	80 83       	st	Z, r24
        data_counter++;
 24c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 250:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x1>
 254:	01 96       	adiw	r24, 0x01	; 1
 256:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_end+0x1>
 25a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
		data_index = 9;	
 25e:	89 e0       	ldi	r24, 0x09	; 9
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <data_index+0x1>
 266:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data_index>
 26a:	16 c0       	rjmp	.+44     	; 0x298 <__vector_18+0x1ca>
    } else if ( data_index == 10) {
 26c:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data_index>
 270:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <data_index+0x1>
 274:	2a 30       	cpi	r18, 0x0A	; 10
 276:	31 05       	cpc	r19, r1
 278:	19 f4       	brne	.+6      	; 0x280 <__vector_18+0x1b2>
		if (receivedByte != '8') {
 27a:	88 33       	cpi	r24, 0x38	; 56
 27c:	b1 f4       	brne	.+44     	; 0x2aa <__vector_18+0x1dc>
 27e:	0c c0       	rjmp	.+24     	; 0x298 <__vector_18+0x1ca>
			return;
		}
	} else if (data_index == 11) {
 280:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data_index>
 284:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <data_index+0x1>
 288:	2b 30       	cpi	r18, 0x0B	; 11
 28a:	31 05       	cpc	r19, r1
 28c:	29 f4       	brne	.+10     	; 0x298 <__vector_18+0x1ca>
		if (receivedByte != '0') {
 28e:	80 33       	cpi	r24, 0x30	; 48
 290:	61 f4       	brne	.+24     	; 0x2aa <__vector_18+0x1dc>
			return;
		} else {
			data_ready = true;
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <data_ready>
		}
	}
	data_index++;
 298:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data_index>
 29c:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <data_index+0x1>
 2a0:	01 96       	adiw	r24, 0x01	; 1
 2a2:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <data_index+0x1>
 2a6:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data_index>
}
 2aa:	0f 90       	pop	r0
 2ac:	df 91       	pop	r29
 2ae:	cf 91       	pop	r28
 2b0:	ff 91       	pop	r31
 2b2:	ef 91       	pop	r30
 2b4:	bf 91       	pop	r27
 2b6:	af 91       	pop	r26
 2b8:	9f 91       	pop	r25
 2ba:	8f 91       	pop	r24
 2bc:	7f 91       	pop	r23
 2be:	6f 91       	pop	r22
 2c0:	5f 91       	pop	r21
 2c2:	4f 91       	pop	r20
 2c4:	3f 91       	pop	r19
 2c6:	2f 91       	pop	r18
 2c8:	1f 91       	pop	r17
 2ca:	0f 91       	pop	r16
 2cc:	0f 90       	pop	r0
 2ce:	0f be       	out	0x3f, r0	; 63
 2d0:	0f 90       	pop	r0
 2d2:	1f 90       	pop	r1
 2d4:	18 95       	reti

000002d6 <main>:

int main() {
    // Set up port B5 (LED) as an output
    DDRB |= (1 << DDB5);
 2d6:	84 b1       	in	r24, 0x04	; 4
 2d8:	80 62       	ori	r24, 0x20	; 32
 2da:	84 b9       	out	0x04, r24	; 4

    // Initialize USART
    USART_Init();
 2dc:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Init>

    // Enable global interrupts
    sei();
 2e0:	78 94       	sei

    while (1) {
        if (data_ready) {
 2e2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <data_ready>
 2e6:	88 23       	and	r24, r24
 2e8:	e1 f3       	breq	.-8      	; 0x2e2 <main+0xc>
			data_index = 0;
 2ea:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <data_index+0x1>
 2ee:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data_index>
			for (int i = 0; i < data_length; i++) {
 2f2:	c0 e0       	ldi	r28, 0x00	; 0
 2f4:	d0 e0       	ldi	r29, 0x00	; 0
 2f6:	07 c0       	rjmp	.+14     	; 0x306 <main+0x30>
				USART_Transmit(received_data[i]);
 2f8:	fe 01       	movw	r30, r28
 2fa:	e5 5f       	subi	r30, 0xF5	; 245
 2fc:	fe 4f       	sbci	r31, 0xFE	; 254
 2fe:	80 81       	ld	r24, Z
 300:	0e 94 60 00 	call	0xc0	; 0xc0 <USART_Transmit>
    sei();

    while (1) {
        if (data_ready) {
			data_index = 0;
			for (int i = 0; i < data_length; i++) {
 304:	21 96       	adiw	r28, 0x01	; 1
 306:	40 91 07 01 	lds	r20, 0x0107	; 0x800107 <data_length>
 30a:	50 91 08 01 	lds	r21, 0x0108	; 0x800108 <data_length+0x1>
 30e:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <data_length+0x2>
 312:	70 91 0a 01 	lds	r23, 0x010A	; 0x80010a <data_length+0x3>
 316:	ce 01       	movw	r24, r28
 318:	0d 2e       	mov	r0, r29
 31a:	00 0c       	add	r0, r0
 31c:	aa 0b       	sbc	r26, r26
 31e:	bb 0b       	sbc	r27, r27
 320:	84 17       	cp	r24, r20
 322:	95 07       	cpc	r25, r21
 324:	a6 07       	cpc	r26, r22
 326:	b7 07       	cpc	r27, r23
 328:	3c f3       	brlt	.-50     	; 0x2f8 <main+0x22>
				USART_Transmit(received_data[i]);
			}
			USART_Transmit('\n');
 32a:	8a e0       	ldi	r24, 0x0A	; 10
 32c:	0e 94 60 00 	call	0xc0	; 0xc0 <USART_Transmit>

            data_ready = false; // Reset the flag
 330:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <data_ready>
 334:	d6 cf       	rjmp	.-84     	; 0x2e2 <main+0xc>

00000336 <strtol>:
 336:	a0 e0       	ldi	r26, 0x00	; 0
 338:	b0 e0       	ldi	r27, 0x00	; 0
 33a:	e1 ea       	ldi	r30, 0xA1	; 161
 33c:	f1 e0       	ldi	r31, 0x01	; 1
 33e:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__prologue_saves__+0x2>
 342:	5c 01       	movw	r10, r24
 344:	6b 01       	movw	r12, r22
 346:	7a 01       	movw	r14, r20
 348:	61 15       	cp	r22, r1
 34a:	71 05       	cpc	r23, r1
 34c:	19 f0       	breq	.+6      	; 0x354 <strtol+0x1e>
 34e:	fb 01       	movw	r30, r22
 350:	91 83       	std	Z+1, r25	; 0x01
 352:	80 83       	st	Z, r24
 354:	e1 14       	cp	r14, r1
 356:	f1 04       	cpc	r15, r1
 358:	29 f0       	breq	.+10     	; 0x364 <strtol+0x2e>
 35a:	c7 01       	movw	r24, r14
 35c:	02 97       	sbiw	r24, 0x02	; 2
 35e:	83 97       	sbiw	r24, 0x23	; 35
 360:	08 f0       	brcs	.+2      	; 0x364 <strtol+0x2e>
 362:	e5 c0       	rjmp	.+458    	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 364:	e5 01       	movw	r28, r10
 366:	21 96       	adiw	r28, 0x01	; 1
 368:	f5 01       	movw	r30, r10
 36a:	10 81       	ld	r17, Z
 36c:	81 2f       	mov	r24, r17
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	0e 94 b1 02 	call	0x562	; 0x562 <isspace>
 374:	89 2b       	or	r24, r25
 376:	11 f0       	breq	.+4      	; 0x37c <strtol+0x46>
 378:	5e 01       	movw	r10, r28
 37a:	f4 cf       	rjmp	.-24     	; 0x364 <strtol+0x2e>
 37c:	1d 32       	cpi	r17, 0x2D	; 45
 37e:	29 f4       	brne	.+10     	; 0x38a <strtol+0x54>
 380:	21 96       	adiw	r28, 0x01	; 1
 382:	f5 01       	movw	r30, r10
 384:	11 81       	ldd	r17, Z+1	; 0x01
 386:	01 e0       	ldi	r16, 0x01	; 1
 388:	07 c0       	rjmp	.+14     	; 0x398 <strtol+0x62>
 38a:	1b 32       	cpi	r17, 0x2B	; 43
 38c:	21 f4       	brne	.+8      	; 0x396 <strtol+0x60>
 38e:	e5 01       	movw	r28, r10
 390:	22 96       	adiw	r28, 0x02	; 2
 392:	f5 01       	movw	r30, r10
 394:	11 81       	ldd	r17, Z+1	; 0x01
 396:	00 e0       	ldi	r16, 0x00	; 0
 398:	e1 14       	cp	r14, r1
 39a:	f1 04       	cpc	r15, r1
 39c:	09 f1       	breq	.+66     	; 0x3e0 <strtol+0xaa>
 39e:	f0 e1       	ldi	r31, 0x10	; 16
 3a0:	ef 16       	cp	r14, r31
 3a2:	f1 04       	cpc	r15, r1
 3a4:	29 f4       	brne	.+10     	; 0x3b0 <strtol+0x7a>
 3a6:	3f c0       	rjmp	.+126    	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 3a8:	10 e3       	ldi	r17, 0x30	; 48
 3aa:	e1 14       	cp	r14, r1
 3ac:	f1 04       	cpc	r15, r1
 3ae:	21 f1       	breq	.+72     	; 0x3f8 <strtol+0xc2>
 3b0:	28 e0       	ldi	r18, 0x08	; 8
 3b2:	e2 16       	cp	r14, r18
 3b4:	f1 04       	cpc	r15, r1
 3b6:	01 f1       	breq	.+64     	; 0x3f8 <strtol+0xc2>
 3b8:	54 f4       	brge	.+20     	; 0x3ce <strtol+0x98>
 3ba:	e2 e0       	ldi	r30, 0x02	; 2
 3bc:	ee 16       	cp	r14, r30
 3be:	f1 04       	cpc	r15, r1
 3c0:	21 f5       	brne	.+72     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3c2:	81 2c       	mov	r8, r1
 3c4:	91 2c       	mov	r9, r1
 3c6:	a1 2c       	mov	r10, r1
 3c8:	b0 e4       	ldi	r27, 0x40	; 64
 3ca:	bb 2e       	mov	r11, r27
 3cc:	3e c0       	rjmp	.+124    	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 3ce:	fa e0       	ldi	r31, 0x0A	; 10
 3d0:	ef 16       	cp	r14, r31
 3d2:	f1 04       	cpc	r15, r1
 3d4:	39 f0       	breq	.+14     	; 0x3e4 <strtol+0xae>
 3d6:	20 e1       	ldi	r18, 0x10	; 16
 3d8:	e2 16       	cp	r14, r18
 3da:	f1 04       	cpc	r15, r1
 3dc:	b1 f4       	brne	.+44     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3de:	30 c0       	rjmp	.+96     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 3e0:	10 33       	cpi	r17, 0x30	; 48
 3e2:	19 f1       	breq	.+70     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 3e4:	fa e0       	ldi	r31, 0x0A	; 10
 3e6:	ef 2e       	mov	r14, r31
 3e8:	f1 2c       	mov	r15, r1
 3ea:	ac ec       	ldi	r26, 0xCC	; 204
 3ec:	8a 2e       	mov	r8, r26
 3ee:	98 2c       	mov	r9, r8
 3f0:	a8 2c       	mov	r10, r8
 3f2:	ac e0       	ldi	r26, 0x0C	; 12
 3f4:	ba 2e       	mov	r11, r26
 3f6:	29 c0       	rjmp	.+82     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 3f8:	78 e0       	ldi	r23, 0x08	; 8
 3fa:	e7 2e       	mov	r14, r23
 3fc:	f1 2c       	mov	r15, r1
 3fe:	81 2c       	mov	r8, r1
 400:	91 2c       	mov	r9, r1
 402:	a1 2c       	mov	r10, r1
 404:	e0 e1       	ldi	r30, 0x10	; 16
 406:	be 2e       	mov	r11, r30
 408:	20 c0       	rjmp	.+64     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 40a:	60 e0       	ldi	r22, 0x00	; 0
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	90 e8       	ldi	r25, 0x80	; 128
 412:	97 01       	movw	r18, r14
 414:	0f 2c       	mov	r0, r15
 416:	00 0c       	add	r0, r0
 418:	44 0b       	sbc	r20, r20
 41a:	55 0b       	sbc	r21, r21
 41c:	0e 94 cd 02 	call	0x59a	; 0x59a <__udivmodsi4>
 420:	49 01       	movw	r8, r18
 422:	5a 01       	movw	r10, r20
 424:	12 c0       	rjmp	.+36     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 426:	10 33       	cpi	r17, 0x30	; 48
 428:	59 f4       	brne	.+22     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 42a:	88 81       	ld	r24, Y
 42c:	8f 7d       	andi	r24, 0xDF	; 223
 42e:	88 35       	cpi	r24, 0x58	; 88
 430:	09 f0       	breq	.+2      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 432:	ba cf       	rjmp	.-140    	; 0x3a8 <strtol+0x72>
 434:	19 81       	ldd	r17, Y+1	; 0x01
 436:	22 96       	adiw	r28, 0x02	; 2
 438:	02 60       	ori	r16, 0x02	; 2
 43a:	80 e1       	ldi	r24, 0x10	; 16
 43c:	e8 2e       	mov	r14, r24
 43e:	f1 2c       	mov	r15, r1
 440:	81 2c       	mov	r8, r1
 442:	91 2c       	mov	r9, r1
 444:	a1 2c       	mov	r10, r1
 446:	68 e0       	ldi	r22, 0x08	; 8
 448:	b6 2e       	mov	r11, r22
 44a:	40 e0       	ldi	r20, 0x00	; 0
 44c:	60 e0       	ldi	r22, 0x00	; 0
 44e:	70 e0       	ldi	r23, 0x00	; 0
 450:	cb 01       	movw	r24, r22
 452:	27 01       	movw	r4, r14
 454:	0f 2c       	mov	r0, r15
 456:	00 0c       	add	r0, r0
 458:	66 08       	sbc	r6, r6
 45a:	77 08       	sbc	r7, r7
 45c:	fe 01       	movw	r30, r28
 45e:	50 ed       	ldi	r21, 0xD0	; 208
 460:	35 2e       	mov	r3, r21
 462:	31 0e       	add	r3, r17
 464:	29 e0       	ldi	r18, 0x09	; 9
 466:	23 15       	cp	r18, r3
 468:	70 f4       	brcc	.+28     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 46a:	2f eb       	ldi	r18, 0xBF	; 191
 46c:	21 0f       	add	r18, r17
 46e:	2a 31       	cpi	r18, 0x1A	; 26
 470:	18 f4       	brcc	.+6      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 472:	39 ec       	ldi	r19, 0xC9	; 201
 474:	33 2e       	mov	r3, r19
 476:	06 c0       	rjmp	.+12     	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 478:	2f e9       	ldi	r18, 0x9F	; 159
 47a:	21 0f       	add	r18, r17
 47c:	2a 31       	cpi	r18, 0x1A	; 26
 47e:	18 f5       	brcc	.+70     	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 480:	29 ea       	ldi	r18, 0xA9	; 169
 482:	32 2e       	mov	r3, r18
 484:	31 0e       	add	r3, r17
 486:	23 2d       	mov	r18, r3
 488:	30 e0       	ldi	r19, 0x00	; 0
 48a:	2e 15       	cp	r18, r14
 48c:	3f 05       	cpc	r19, r15
 48e:	dc f4       	brge	.+54     	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 490:	47 fd       	sbrc	r20, 7
 492:	16 c0       	rjmp	.+44     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 494:	86 16       	cp	r8, r22
 496:	97 06       	cpc	r9, r23
 498:	a8 06       	cpc	r10, r24
 49a:	b9 06       	cpc	r11, r25
 49c:	70 f0       	brcs	.+28     	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 49e:	a3 01       	movw	r20, r6
 4a0:	92 01       	movw	r18, r4
 4a2:	0e 94 bd 02 	call	0x57a	; 0x57a <__mulsi3>
 4a6:	63 0d       	add	r22, r3
 4a8:	71 1d       	adc	r23, r1
 4aa:	81 1d       	adc	r24, r1
 4ac:	91 1d       	adc	r25, r1
 4ae:	61 30       	cpi	r22, 0x01	; 1
 4b0:	71 05       	cpc	r23, r1
 4b2:	81 05       	cpc	r24, r1
 4b4:	20 e8       	ldi	r18, 0x80	; 128
 4b6:	92 07       	cpc	r25, r18
 4b8:	10 f0       	brcs	.+4      	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4ba:	4f ef       	ldi	r20, 0xFF	; 255
 4bc:	01 c0       	rjmp	.+2      	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 4be:	41 e0       	ldi	r20, 0x01	; 1
 4c0:	21 96       	adiw	r28, 0x01	; 1
 4c2:	10 81       	ld	r17, Z
 4c4:	cb cf       	rjmp	.-106    	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 4c6:	20 2f       	mov	r18, r16
 4c8:	21 70       	andi	r18, 0x01	; 1
 4ca:	c1 14       	cp	r12, r1
 4cc:	d1 04       	cpc	r13, r1
 4ce:	71 f0       	breq	.+28     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4d0:	44 23       	and	r20, r20
 4d2:	29 f0       	breq	.+10     	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
 4d4:	21 97       	sbiw	r28, 0x01	; 1
 4d6:	f6 01       	movw	r30, r12
 4d8:	d1 83       	std	Z+1, r29	; 0x01
 4da:	c0 83       	st	Z, r28
 4dc:	07 c0       	rjmp	.+14     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4de:	01 ff       	sbrs	r16, 1
 4e0:	19 c0       	rjmp	.+50     	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
 4e2:	22 97       	sbiw	r28, 0x02	; 2
 4e4:	f6 01       	movw	r30, r12
 4e6:	d1 83       	std	Z+1, r29	; 0x01
 4e8:	c0 83       	st	Z, r28
 4ea:	14 c0       	rjmp	.+40     	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
 4ec:	47 ff       	sbrs	r20, 7
 4ee:	12 c0       	rjmp	.+36     	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
 4f0:	22 23       	and	r18, r18
 4f2:	29 f0       	breq	.+10     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
 4f4:	60 e0       	ldi	r22, 0x00	; 0
 4f6:	70 e0       	ldi	r23, 0x00	; 0
 4f8:	80 e0       	ldi	r24, 0x00	; 0
 4fa:	90 e8       	ldi	r25, 0x80	; 128
 4fc:	04 c0       	rjmp	.+8      	; 0x506 <__EEPROM_REGION_LENGTH__+0x106>
 4fe:	6f ef       	ldi	r22, 0xFF	; 255
 500:	7f ef       	ldi	r23, 0xFF	; 255
 502:	8f ef       	ldi	r24, 0xFF	; 255
 504:	9f e7       	ldi	r25, 0x7F	; 127
 506:	22 e2       	ldi	r18, 0x22	; 34
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	30 93 0b 02 	sts	0x020B, r19	; 0x80020b <errno+0x1>
 50e:	20 93 0a 02 	sts	0x020A, r18	; 0x80020a <errno>
 512:	09 c0       	rjmp	.+18     	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 514:	22 23       	and	r18, r18
 516:	81 f0       	breq	.+32     	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
 518:	90 95       	com	r25
 51a:	80 95       	com	r24
 51c:	70 95       	com	r23
 51e:	61 95       	neg	r22
 520:	7f 4f       	sbci	r23, 0xFF	; 255
 522:	8f 4f       	sbci	r24, 0xFF	; 255
 524:	9f 4f       	sbci	r25, 0xFF	; 255
 526:	46 2f       	mov	r20, r22
 528:	37 2f       	mov	r19, r23
 52a:	28 2f       	mov	r18, r24
 52c:	12 c0       	rjmp	.+36     	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
 52e:	40 e0       	ldi	r20, 0x00	; 0
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	20 e0       	ldi	r18, 0x00	; 0
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	0d c0       	rjmp	.+26     	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
 538:	97 ff       	sbrs	r25, 7
 53a:	f5 cf       	rjmp	.-22     	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 53c:	82 e2       	ldi	r24, 0x22	; 34
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <errno+0x1>
 544:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <errno>
 548:	6f ef       	ldi	r22, 0xFF	; 255
 54a:	7f ef       	ldi	r23, 0xFF	; 255
 54c:	8f ef       	ldi	r24, 0xFF	; 255
 54e:	9f e7       	ldi	r25, 0x7F	; 127
 550:	ea cf       	rjmp	.-44     	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 552:	64 2f       	mov	r22, r20
 554:	73 2f       	mov	r23, r19
 556:	82 2f       	mov	r24, r18
 558:	cd b7       	in	r28, 0x3d	; 61
 55a:	de b7       	in	r29, 0x3e	; 62
 55c:	e1 e1       	ldi	r30, 0x11	; 17
 55e:	0c 94 17 03 	jmp	0x62e	; 0x62e <__epilogue_restores__+0x2>

00000562 <isspace>:
 562:	91 11       	cpse	r25, r1
 564:	0c 94 ba 02 	jmp	0x574	; 0x574 <__ctype_isfalse>
 568:	80 32       	cpi	r24, 0x20	; 32
 56a:	19 f0       	breq	.+6      	; 0x572 <isspace+0x10>
 56c:	89 50       	subi	r24, 0x09	; 9
 56e:	85 50       	subi	r24, 0x05	; 5
 570:	c8 f7       	brcc	.-14     	; 0x564 <isspace+0x2>
 572:	08 95       	ret

00000574 <__ctype_isfalse>:
 574:	99 27       	eor	r25, r25
 576:	88 27       	eor	r24, r24

00000578 <__ctype_istrue>:
 578:	08 95       	ret

0000057a <__mulsi3>:
 57a:	db 01       	movw	r26, r22
 57c:	8f 93       	push	r24
 57e:	9f 93       	push	r25
 580:	0e 94 ef 02 	call	0x5de	; 0x5de <__muluhisi3>
 584:	bf 91       	pop	r27
 586:	af 91       	pop	r26
 588:	a2 9f       	mul	r26, r18
 58a:	80 0d       	add	r24, r0
 58c:	91 1d       	adc	r25, r1
 58e:	a3 9f       	mul	r26, r19
 590:	90 0d       	add	r25, r0
 592:	b2 9f       	mul	r27, r18
 594:	90 0d       	add	r25, r0
 596:	11 24       	eor	r1, r1
 598:	08 95       	ret

0000059a <__udivmodsi4>:
 59a:	a1 e2       	ldi	r26, 0x21	; 33
 59c:	1a 2e       	mov	r1, r26
 59e:	aa 1b       	sub	r26, r26
 5a0:	bb 1b       	sub	r27, r27
 5a2:	fd 01       	movw	r30, r26
 5a4:	0d c0       	rjmp	.+26     	; 0x5c0 <__udivmodsi4_ep>

000005a6 <__udivmodsi4_loop>:
 5a6:	aa 1f       	adc	r26, r26
 5a8:	bb 1f       	adc	r27, r27
 5aa:	ee 1f       	adc	r30, r30
 5ac:	ff 1f       	adc	r31, r31
 5ae:	a2 17       	cp	r26, r18
 5b0:	b3 07       	cpc	r27, r19
 5b2:	e4 07       	cpc	r30, r20
 5b4:	f5 07       	cpc	r31, r21
 5b6:	20 f0       	brcs	.+8      	; 0x5c0 <__udivmodsi4_ep>
 5b8:	a2 1b       	sub	r26, r18
 5ba:	b3 0b       	sbc	r27, r19
 5bc:	e4 0b       	sbc	r30, r20
 5be:	f5 0b       	sbc	r31, r21

000005c0 <__udivmodsi4_ep>:
 5c0:	66 1f       	adc	r22, r22
 5c2:	77 1f       	adc	r23, r23
 5c4:	88 1f       	adc	r24, r24
 5c6:	99 1f       	adc	r25, r25
 5c8:	1a 94       	dec	r1
 5ca:	69 f7       	brne	.-38     	; 0x5a6 <__udivmodsi4_loop>
 5cc:	60 95       	com	r22
 5ce:	70 95       	com	r23
 5d0:	80 95       	com	r24
 5d2:	90 95       	com	r25
 5d4:	9b 01       	movw	r18, r22
 5d6:	ac 01       	movw	r20, r24
 5d8:	bd 01       	movw	r22, r26
 5da:	cf 01       	movw	r24, r30
 5dc:	08 95       	ret

000005de <__muluhisi3>:
 5de:	0e 94 31 03 	call	0x662	; 0x662 <__umulhisi3>
 5e2:	a5 9f       	mul	r26, r21
 5e4:	90 0d       	add	r25, r0
 5e6:	b4 9f       	mul	r27, r20
 5e8:	90 0d       	add	r25, r0
 5ea:	a4 9f       	mul	r26, r20
 5ec:	80 0d       	add	r24, r0
 5ee:	91 1d       	adc	r25, r1
 5f0:	11 24       	eor	r1, r1
 5f2:	08 95       	ret

000005f4 <__prologue_saves__>:
 5f4:	2f 92       	push	r2
 5f6:	3f 92       	push	r3
 5f8:	4f 92       	push	r4
 5fa:	5f 92       	push	r5
 5fc:	6f 92       	push	r6
 5fe:	7f 92       	push	r7
 600:	8f 92       	push	r8
 602:	9f 92       	push	r9
 604:	af 92       	push	r10
 606:	bf 92       	push	r11
 608:	cf 92       	push	r12
 60a:	df 92       	push	r13
 60c:	ef 92       	push	r14
 60e:	ff 92       	push	r15
 610:	0f 93       	push	r16
 612:	1f 93       	push	r17
 614:	cf 93       	push	r28
 616:	df 93       	push	r29
 618:	cd b7       	in	r28, 0x3d	; 61
 61a:	de b7       	in	r29, 0x3e	; 62
 61c:	ca 1b       	sub	r28, r26
 61e:	db 0b       	sbc	r29, r27
 620:	0f b6       	in	r0, 0x3f	; 63
 622:	f8 94       	cli
 624:	de bf       	out	0x3e, r29	; 62
 626:	0f be       	out	0x3f, r0	; 63
 628:	cd bf       	out	0x3d, r28	; 61
 62a:	09 94       	ijmp

0000062c <__epilogue_restores__>:
 62c:	2a 88       	ldd	r2, Y+18	; 0x12
 62e:	39 88       	ldd	r3, Y+17	; 0x11
 630:	48 88       	ldd	r4, Y+16	; 0x10
 632:	5f 84       	ldd	r5, Y+15	; 0x0f
 634:	6e 84       	ldd	r6, Y+14	; 0x0e
 636:	7d 84       	ldd	r7, Y+13	; 0x0d
 638:	8c 84       	ldd	r8, Y+12	; 0x0c
 63a:	9b 84       	ldd	r9, Y+11	; 0x0b
 63c:	aa 84       	ldd	r10, Y+10	; 0x0a
 63e:	b9 84       	ldd	r11, Y+9	; 0x09
 640:	c8 84       	ldd	r12, Y+8	; 0x08
 642:	df 80       	ldd	r13, Y+7	; 0x07
 644:	ee 80       	ldd	r14, Y+6	; 0x06
 646:	fd 80       	ldd	r15, Y+5	; 0x05
 648:	0c 81       	ldd	r16, Y+4	; 0x04
 64a:	1b 81       	ldd	r17, Y+3	; 0x03
 64c:	aa 81       	ldd	r26, Y+2	; 0x02
 64e:	b9 81       	ldd	r27, Y+1	; 0x01
 650:	ce 0f       	add	r28, r30
 652:	d1 1d       	adc	r29, r1
 654:	0f b6       	in	r0, 0x3f	; 63
 656:	f8 94       	cli
 658:	de bf       	out	0x3e, r29	; 62
 65a:	0f be       	out	0x3f, r0	; 63
 65c:	cd bf       	out	0x3d, r28	; 61
 65e:	ed 01       	movw	r28, r26
 660:	08 95       	ret

00000662 <__umulhisi3>:
 662:	a2 9f       	mul	r26, r18
 664:	b0 01       	movw	r22, r0
 666:	b3 9f       	mul	r27, r19
 668:	c0 01       	movw	r24, r0
 66a:	a3 9f       	mul	r26, r19
 66c:	70 0d       	add	r23, r0
 66e:	81 1d       	adc	r24, r1
 670:	11 24       	eor	r1, r1
 672:	91 1d       	adc	r25, r1
 674:	b2 9f       	mul	r27, r18
 676:	70 0d       	add	r23, r0
 678:	81 1d       	adc	r24, r1
 67a:	11 24       	eor	r1, r1
 67c:	91 1d       	adc	r25, r1
 67e:	08 95       	ret

00000680 <_exit>:
 680:	f8 94       	cli

00000682 <__stop_program>:
 682:	ff cf       	rjmp	.-2      	; 0x682 <__stop_program>
